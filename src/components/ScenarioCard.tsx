import React from 'react';

export type Status = 'pending' | 'agreed' | 'confirmed' | 'disputed' | string;

export type Scenario = {
  id: string;
  creator_id: string;
  executor_id: string;
  description: string | null;
  donation_amount_usdt: number | null;
  date: string;
  time?: string | null;
  execution_time?: string | null;
  latitude?: number | null;
  longitude?: number | null;
  status: Status;
  is_agreed_by_customer: boolean;
  is_agreed_by_executor: boolean;
  escrow_tx_hash?: string | null;
  is_completed_by_customer?: boolean;
  is_completed_by_executor?: boolean;
};

type Props = {
  role: 'customer' | 'executor';
  s: Scenario;

  // —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –æ–ø–∏—Å—É/—Å—É–º–∏
  onChangeDesc?: (v: string) => void;
  onCommitDesc?: (v: string) => void | Promise<void>;
  onChangeAmount?: (v: number | null) => void;
  onCommitAmount?: (v: number | null) => void | Promise<void>;

  // –¥—ñ—ó
  onAgree?: () => void;
  onLock?: () => void;
  onConfirm?: () => void;
  onDispute?: () => void;
  onOpenLocation?: () => void;

  // –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
  canAgree?: boolean;
  canLock?: boolean;
  canConfirm?: boolean;
  canDispute?: boolean;
  hasCoords?: boolean;

  // —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
  busyAgree?: boolean;
  busyLock?: boolean;
  busyConfirm?: boolean;

  // –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –¥–µ—è–∫—ñ –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –µ—Ç–∞–ø–∞—Ö
  hideLock?: boolean;
  hideConfirm?: boolean;
  hideDispute?: boolean;

  // —Ä–µ–π—Ç–∏–Ω–≥ (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è)
  isRated?: boolean;
  onOpenRate?: () => void;
};

export default function ScenarioCard(props: Props) {
  const {
    s, role,
    onChangeDesc, onCommitDesc,
    onChangeAmount, onCommitAmount,
    onAgree, onLock, onConfirm, onDispute, onOpenLocation,
    canAgree, canLock, canConfirm, canDispute, hasCoords,
    busyAgree, busyLock, busyConfirm,
    hideLock, hideConfirm, hideDispute,
    isRated, onOpenRate,
  } = props;

  const confirmed = s.status === 'confirmed';

  // –ª–æ–∫–∞–ª—å–Ω—ñ —Ö–µ–ª–ø–µ—Ä–∏ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è —Å—É–º–∏
  const amountToString = (v: number | null) => (v ?? '') as any;
  const handleAmountChange = (raw: string) => {
    if (!onChangeAmount) return;
    if (raw === '') { onChangeAmount(null); return; }
    const v = parseFloat(raw);
    onChangeAmount(Number.isFinite(v) ? v : null);
  };
  const handleAmountBlur = (raw: string) => {
    if (!onCommitAmount) return;
    if (confirmed) return;
    if (raw === '') { onCommitAmount(null); return; }
    const v = parseFloat(raw);
    onCommitAmount(Number.isFinite(v) ? v : null);
  };

  // —Å—Ç–∏–ª—ñ (–∞–¥–∏—Ç–∏–≤–Ω–æ, –±–µ–∑ –∑–º—ñ–Ω–∏ —ñ—Å–Ω—É—é—á–∏—Ö –∫–ª–∞—Å—ñ–≤)
  const hintStyle: React.CSSProperties = {
    fontSize: 12,
    lineHeight: '16px',
    opacity: 0.8,
    marginBottom: 8,
  };
  const labelStyle: React.CSSProperties = {
    fontSize: 13,
    lineHeight: '18px',
    marginBottom: 6,
    opacity: 0.9,
  };
  const amountPillStyle: React.CSSProperties = {
    display: 'flex',
    alignItems: 'center',
    gap: 8,
    borderRadius: 9999,
    padding: '4px 8px',
  };
  const amountInputStyle: React.CSSProperties = {
    borderRadius: 9999,
    padding: '14px 16px',
    fontSize: 18,
    height: 48,
    outline: 'none',
  };

  return (
    <div className="scenario-card" data-card-id={s.id}>
      <div className="scenario-info">

        {/* üîî –ù–ê–ì–ê–î–£–í–ê–ù–ù–Ø –Ω–∞–¥ –ø–æ–ª–µ–º –æ–ø–∏—Å—É */}
        <div style={hintStyle}>
          –û–ø–∏—Å —Å—Ü–µ–Ω–∞—Ä—ñ—é —ñ —Å—É–º–∞ –¥–æ–±—Ä–æ–≤—ñ–ª—å–Ω–æ–≥–æ –¥–æ–Ω–∞—Ç—É —Ä–µ–¥–∞–≥—É—é—Ç—å—Å—è –æ–±–æ–º–∞ —É—á–∞—Å–Ω–∏–∫–∞–º–∏ –¥–æ –ü–æ–≥–æ–¥–∂–µ–Ω–Ω—è —É–≥–æ–¥–∏.
        </div>

        {/* –û–ü–ò–° */}
        <div>
          <strong>–û–ø–∏—Å:</strong><br />
          <textarea
            value={s.description ?? ''}
            maxLength={1000}
            onChange={(e) => onChangeDesc?.(e.target.value)}
            onBlur={(e) => onCommitDesc?.(e.target.value)}
            disabled={confirmed}
            style={{ width: '100%' }}
          />
        </div>

        {/* –ú–ï–¢–ê (–¥–∞—Ç–∞/—á–∞—Å) */}
        <div className="meta-row" style={{ marginTop: 8 }}>
          <div className="meta-col">
            <div className="meta-label">–î–∞—Ç–∞:</div>
            <div className="meta-value">{s.date}</div>
          </div>
          <div className="meta-col">
            <div className="meta-label">–ß–∞—Å:</div>
            <div className="meta-value">{s.time || '‚Äî'}</div>
          </div>
        </div>

        {/* –°–£–ú–ê */}
        <div className="amount-row" style={{ marginTop: 10 }}>
          <label className="amount-label" style={labelStyle}>
            –°—É–º–∞ –¥–æ–±—Ä–æ–≤—ñ–ª—å–Ω–æ–≥–æ –¥–æ–Ω–∞—Ç—É –Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—ñ
          </label>
          <div className="amount-pill" style={amountPillStyle}>
            <input
              className="amount-input"
              type="number"
              step="0.000001"
              value={amountToString(s.donation_amount_usdt)}
              placeholder="‚Äî"
              onChange={(e) => handleAmountChange((e.target as HTMLInputElement).value)}
              onBlur={(e) => handleAmountBlur((e.target as HTMLInputElement).value)}
              disabled={confirmed}
              style={amountInputStyle}
            />
            <span className="amount-unit">USDT</span>
          </div>
        </div>
      </div>

      {/* –ö–ù–û–ü–ö–ò –î–Ü–ô */}
      <div className="scenario-actions">
        {/* –ü–æ–≥–æ–¥–∏—Ç–∏ —É–≥–æ–¥—É */}
        <button
          className="btn agree"
          onClick={onAgree}
          disabled={!canAgree || !!busyAgree}
        >
          {busyAgree ? '‚Ä¶' : 'ü§ù –ü–æ–≥–æ–¥–∏—Ç–∏ —É–≥–æ–¥—É'}
        </button>

        {/* –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –∫–æ—à—Ç–∏ (–º–æ–∂–µ –±—É—Ç–∏ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∞ —É –í–∏–∫–æ–Ω–∞–≤—Ü—è) */}
        {!hideLock && (
          <button
            className="btn lock"
            onClick={onLock}
            disabled={!canLock || !!busyLock}
          >
            {busyLock ? '‚Ä¶' : 'üí≥ –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –∫–æ—à—Ç–∏'}
          </button>
        )}

        {/* –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è */}
        {!hideConfirm && (
          <button
            className="btn confirm"
            onClick={onConfirm}
            disabled={!canConfirm || !!busyConfirm}
          >
            {busyConfirm ? '‚Ä¶' : '‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'}
          </button>
        )}

        {/* –û—Å–ø–æ—Ä–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (–∫–Ω–æ–ø–∫–∞ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞) */}
        {!hideDispute && (
          <button
            className="btn dispute"
            onClick={onDispute}
            disabled={!canDispute}
          >
            ‚öñÔ∏è –û—Å–ø–æ—Ä–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
          </button>
        )}

        {/* –õ–æ–∫–∞—Ü—ñ—è ‚Äî –∑–∞–≤–∂–¥–∏ –∞–∫—Ç–∏–≤–Ω–∞, —è–∫—â–æ —î –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ */}
        <button
          className="btn location"
          onClick={onOpenLocation}
          disabled={!hasCoords}
        >
          üìç –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é
        </button>

        {/* –†–µ–π—Ç–∏–Ω–≥ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω) */}
        {s.status === 'confirmed' && onOpenRate && (
          isRated ? (
            <span style={{ marginLeft: 8, opacity: 0.85 }}>‚≠ê –û—Ü—ñ–Ω–µ–Ω–æ</span>
          ) : (
            <button className="btn" onClick={onOpenRate}>‚≠ê –û—Ü—ñ–Ω–∏—Ç–∏</button>
          )
        )}
      </div>
    </div>
  );
}
