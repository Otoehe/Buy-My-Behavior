// src/components/Register.tsx
import { useEffect, useMemo, useRef, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { supabase } from '../lib/supabase';
import './Register.css';

export default function Register() {
  const navigate = useNavigate();

  // ====== SESSION BOOT ======
  useEffect(() => {
    let unsub: (() => void) | undefined;

    (async () => {
      try {
        const { data } = await supabase.auth.getSession();
        const session = data?.session ?? null;

        if (session?.user) {
          // —Ä–∞–∑–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏ (—è–∫—â–æ —â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–∞)
          try {
            const referred_by = localStorage.getItem('referred_by');
            const referrer_wallet = localStorage.getItem('referrer_wallet');
            if (referred_by || referrer_wallet) {
              const { data: prof } = await supabase
                .from('profiles')
                .select('user_id,referred_by,referrer_wallet')
                .eq('user_id', session.user.id)
                .maybeSingle();

              if (!prof || (!prof.referred_by && !prof.referrer_wallet)) {
                const payload: Record<string, any> = { user_id: session.user.id };
                if (referred_by) payload.referred_by = referred_by;
                if (referrer_wallet) payload.referrer_wallet = referrer_wallet;
                await supabase.from('profiles').upsert(payload, { onConflict: 'user_id' });
              }
            }
          } catch { /* ignore */ }

          navigate('/profile', { replace: true });
          return;
        }
      } catch { /* ignore */ }

      // —è–∫—â–æ —Å–µ—Å—ñ—è –∑'—è–≤–∏—Ç—å—Å—è ‚Äî –æ–¥—Ä–∞–∑—É –∑–ª—ñ—Ç–∞—î–º–æ –∑ /register
      const { data: sub } = supabase.auth.onAuthStateChange((_e, session) => {
        if (session?.user) navigate('/profile', { replace: true });
      });
      unsub = () => sub.subscription.unsubscribe();
    })();

    return () => { try { unsub?.(); } catch {} };
  }, [navigate]);

  // ====== STATE ======
  const [email, setEmail] = useState('');
  const [referral_code, setReferralCode] = useState('');

  // –æ–∫—Ä–µ–º—ñ –ª–æ–∞–¥—ñ–Ω–≥–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  const [loadingSignup, setLoadingSignup] = useState(false);
  const [loadingLogin, setLoadingLogin] = useState(false);

  // –≥–ª–æ–±–∞–ª—å–Ω–∏–π in-flight + –∫–æ—Ä–æ—Ç–∫–∏–π –∫—É–ª–¥–∞—É–Ω, —â–æ–± –Ω–µ –ª–æ–≤–∏—Ç–∏ 429
  const inFlightRef = useRef(false);
  const [cooldownUntil, setCooldownUntil] = useState(0);
  const blocked = () => inFlightRef.current || Date.now() < cooldownUntil;
  const startFlight = (ms = 2400) => { inFlightRef.current = true; setCooldownUntil(Date.now() + ms); };
  const endFlight   = () => { inFlightRef.current = false; };

  // –º–æ–¥–∞–ª–∫–∏
  const [showRefModal, setShowRefModal] = useState(false);
  const [showEmailSentModal, setShowEmailSentModal] = useState(false); // ‚Üê –Ω–æ–≤–∞ –º–æ–¥–∞–ª–∫–∞

  const isEmailValid = useMemo(
    () => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email.trim()),
    [email]
  );

  // –∫—É–¥–∏ —Ä–µ–¥—ñ—Ä–µ–∫—Ç–∏—Ç–∏ –ø—ñ—Å–ª—è –º–∞–≥–ª—ñ–Ω–∫–∞
  const appBase =
    (import.meta as any).env?.VITE_PUBLIC_APP_URL ||
    (typeof window !== 'undefined' ? window.location.origin : '');

  const redirectAfterSignup = `${appBase}/auth/callback?next=${encodeURIComponent('/profile')}`; // –Ω–æ–≤–∞—á–æ–∫ ‚Üí –ø—Ä–æ—Ñ—ñ–ª—å
  const redirectAfterLogin  = `${appBase}/auth/callback?next=${encodeURIComponent('/map')}`;     // —ñ—Å–Ω—É—é—á–∏–π ‚Üí –≤–∏–±—Ä–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤—Ü—è

  // ====== HANDLERS ======
  // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ —Ä–µ—Ñ-–∫–æ–¥–æ–º
  const handleSignup = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!isEmailValid || blocked()) {
      if (!isEmailValid) return;
      alert('–ó–∞—á–µ–∫–∞–π—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥‚Ä¶');
      return;
    }

    // —è–∫—â–æ —Ä–µ—Ñ-–∫–æ–¥ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª–∫—É —ñ –Ω–µ —à–ª–µ–º–æ –∑–∞–ø–∏—Ç
    if (!referral_code.trim()) {
      setShowRefModal(true);
      return;
    }

    setLoadingSignup(true);
    startFlight();

    try {
      // –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Ä–µ—Ñ-–∫–æ–¥—É
      const { data, error } = await supabase
        .from('profiles')
        .select('user_id, wallet')
        .eq('referral_code', referral_code.trim())
        .maybeSingle();

      if (error) throw error;
      if (!data) {
        alert('–ù–µ–≤—ñ—Ä–Ω–∏–π —Ä–µ—Ñ-–∫–æ–¥. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–º–±–∞—Å–∞–¥–æ—Ä–∞.');
        return;
      }

      // –∑–±–µ—Ä–µ–∂–µ–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ –∫–æ–ª–±–µ–∫—É
      localStorage.setItem('referred_by', data.user_id);
      localStorage.setItem('referrer_wallet', data.wallet || '');
      localStorage.setItem('post_auth_next', '/profile');

      const { error: sErr } = await supabase.auth.signInWithOtp({
        email: email.trim(),
        options: { emailRedirectTo: redirectAfterSignup },
      });
      if (sErr) throw sErr;

      // ‚úÖ –∑–∞–º—ñ—Å—Ç—å alert ‚Äî –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞ –º–æ–¥–∞–ª–∫–∞
      setShowEmailSentModal(true);
    } catch (err: any) {
      alert('–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ' + (err?.message || '–Ω–µ–≤—ñ–¥–æ–º–∞'));
    } finally {
      setLoadingSignup(false);
      endFlight();
    }
  };

  // –í—Ö—ñ–¥ –±–µ–∑ —Ä–µ—Ñ-–∫–æ–¥—É (—ñ—Å–Ω—É—é—á–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
  const handleLogin = async (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    e.stopPropagation();
    if (!isEmailValid || blocked()) {
      if (!isEmailValid) return;
      alert('–ó–∞—á–µ–∫–∞–π—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥‚Ä¶');
      return;
    }

    setLoadingLogin(true);
    startFlight();

    try {
      localStorage.setItem('post_auth_next', '/map');

      const { error } = await supabase.auth.signInWithOtp({
        email: email.trim(),
        options: {
          emailRedirectTo: redirectAfterLogin,
          shouldCreateUser: false, // —Ç—ñ–ª—å–∫–∏ –≤—Ö—ñ–¥
        },
      });
      if (error) throw error;

      // ‚úÖ —Ç–∞ –∂ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞ –º–æ–¥–∞–ª–∫–∞
      setShowEmailSentModal(true);
    } catch (err: any) {
      alert('–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: ' + (err?.message || '–Ω–µ–≤—ñ–¥–æ–º–∞'));
    } finally {
      setLoadingLogin(false);
      endFlight();
    }
  };

  // ====== UI ======
  return (
    <div className="register-page">
      <form className="register-container" onSubmit={handleSignup}>
        <h2>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º —Å–ª–æ–≤–æ–º</h2>

        <input
          type="email"
          placeholder="Email"
          required
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          autoComplete="email"
          inputMode="email"
        />

        <input
          type="text"
          placeholder="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥"
          value={referral_code}
          onChange={(e) => setReferralCode(e.target.value)}
        />

        {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó */}
        <button
          className="bmb-btn-black"
          type="submit"
          disabled={!isEmailValid || loadingSignup || loadingLogin || blocked()}
        >
          {loadingSignup ? '–í—ñ–¥–ø—Ä–∞–≤–ª—è—é‚Ä¶' : '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'}
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥—É (—Ç–æ–π —Å–∞–º–∏–π –¥–∏–∑–∞–π–Ω, type="button") */}
        <button
          className="bmb-btn-black"
          type="button"
          onClick={handleLogin}
          disabled={!isEmailValid || loadingSignup || loadingLogin || blocked()}
          style={{ marginTop: 8 }}
        >
          {loadingLogin ? '–í—ñ–¥–ø—Ä–∞–≤–ª—è—é‚Ä¶' : '–£–≤—ñ–π—Ç–∏'}
        </button>
      </form>

      {/* === BMB MODAL: —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ª–∏—à–µ –∑–∞ —Ä–µ—Ñ-–∫–æ–¥–æ–º === */}
      <div
        className="bmb-modal-overlay"
        role="dialog"
        aria-modal="true"
        aria-labelledby="bmb-ref-modal-title"
        style={{ display: showRefModal ? 'flex' : 'none' }}
        onClick={(e) => { if (e.target === e.currentTarget) setShowRefModal(false); }}
        onKeyDown={(e) => { if (e.key === 'Escape') setShowRefModal(false); }}
      >
        <div className="bmb-modal-card bmb-pink-bubbles">
          <div className="bmb-modal-icon">üîë</div>
          <h3 id="bmb-ref-modal-title">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ª–∏—à–µ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º —Å–ª–æ–≤–æ–º</h3>
          <p>
            –í–≤–µ–¥—ñ—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ —Å–ª–æ–≤–æ –∞–º–±–∞—Å–∞–¥–æ—Ä–∞, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏.
            –Ø–∫—â–æ –∫–æ–¥—É –Ω–µ–º–∞—î ‚Äî –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–º–±–∞—Å–∞–¥–æ—Ä–∞ BMB.
          </p>
          <button type="button" className="bmb-btn-black" onClick={() => setShowRefModal(false)}>
            –î–æ–±—Ä–µ
          </button>
        </div>
      </div>

      {/* === BMB MODAL: ‚Äú–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –ø–æ—à—Ç—É ‚Äî –º–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è‚Äù (–¥–ª—è signup & login) === */}
      <div
        className="bmb-modal-overlay"
        role="dialog"
        aria-modal="true"
        aria-labelledby="bmb-mail-modal-title"
        style={{ display: showEmailSentModal ? 'flex' : 'none' }}
        onClick={(e) => { if (e.target === e.currentTarget) setShowEmailSentModal(false); }}
        onKeyDown={(e) => { if (e.key === 'Escape') setShowEmailSentModal(false); }}
      >
        <div className="bmb-modal-card bmb-pink-bubbles">
          <div className="bmb-modal-icon">üìß</div>
          <h3 id="bmb-mail-modal-title">–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –ø–æ—à—Ç—É ‚Äî –º–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è</h3>
          <p>
            –í—ñ–¥–∫—Ä–∏–π—Ç–µ –ª–∏—Å—Ç —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥—É. –Ø–∫—â–æ –ª–∏—Å—Ç–∞ –Ω–µ–º–∞—î ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ ‚Äú–°–ø–∞–º‚Äù.
            <br />
            <strong>–ü–æ—Ä–∞–¥–∞:</strong> —è–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–∫—Ä–∏–ª–∞—Å—è –≤ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É –ø–æ—à—Ç–∏,
            –≤–∏–±–µ—Ä—ñ—Ç—å ¬´–í—ñ–¥–∫—Ä–∏—Ç–∏ –≤ Chrome/Safari¬ª, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —É —á–∏—Å—Ç–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ.
          </p>
          <button type="button" className="bmb-btn-black" onClick={() => setShowEmailSentModal(false)}>
            –î–æ–±—Ä–µ
          </button>
        </div>
      </div>
    </div>
  );
}
