import React, { useEffect, useState } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { supabase } from "../lib/supabase";
import {
  saveScenarioFormDraft,
  loadScenarioFormDraft,
  syncScenarioForm,
  clearScenarioFormDraft,
} from "../lib/scenarioFormDraft"; // ‚úÖ –≤–∞–∂–ª–∏–≤–æ: —Ä–æ–±–æ—Ç–∞ –∑ —á–µ—Ä–Ω–µ—Ç–∫–æ—é
import "./ScenarioForm.css";

const VISITED_MAP_KEY = "scenario_visited_map";

export default function ScenarioForm() {
  const navigate = useNavigate();
  const location = useLocation();

  // executor_id —ñ–∑ query –∞–±–æ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–µ—à—É
  const searchParams = new URLSearchParams(location.search);
  const urlExecutorId = searchParams.get("executor_id") || "";
  const storedExecutorId = localStorage.getItem("scenario_receiverId") || "";
  const [executorId, setExecutorId] = useState<string>(urlExecutorId || storedExecutorId);

  const [description, setDescription] = useState("");
  const [donationAmount, setDonationAmount] = useState("");
  const [date, setDate] = useState("");
  const [time, setTime] = useState("");
  const [locationSet, setLocationSet] = useState(false);
  const [error, setError] = useState("");
  const [submitting, setSubmitting] = useState(false);

  // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —á–µ—Ä–Ω–µ—Ç–∫—É
  useEffect(() => {
    const draft = loadScenarioFormDraft();
    if (draft) {
      setDescription(draft.description || "");
      setDonationAmount(draft.price != null ? String(draft.price) : "");
      setDate(draft.date || "");
      setTime(draft.time || "");
    }
  }, []);

  // –Ø–∫—â–æ executor_id –ø—Ä–∏–π—à–æ–≤ —É URL ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –∑ localStorage
  useEffect(() => {
    if (urlExecutorId && urlExecutorId !== storedExecutorId) {
      localStorage.setItem("scenario_receiverId", urlExecutorId);
      setExecutorId(urlExecutorId);
    }
  }, [urlExecutorId, storedExecutorId]);

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤ —Ü—ñ–π –≤–∫–ª–∞–¥—Ü—ñ –ø–µ—Ä–µ—Ö–æ–¥–∏–ª–∏ –Ω–∞ –º–∞–ø—É
  const refreshLocationSet = () => {
    const lat = Number(localStorage.getItem("latitude"));
    const lng = Number(localStorage.getItem("longitude"));
    const visitedThisTab = sessionStorage.getItem(VISITED_MAP_KEY) === "1";
    const hasCoords = Number.isFinite(lat) && Number.isFinite(lng);
    setLocationSet(visitedThisTab && hasCoords);
  };

  useEffect(() => {
    refreshLocationSet();
  }, [location.state]);

  // –ü—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ç–µ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ (–ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É —Ç–æ—á–∫–∏)
  useEffect(() => {
    const onFocus = () => refreshLocationSet();
    window.addEventListener("focus", onFocus);
    return () => window.removeEventListener("focus", onFocus);
  }, []);

  // –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –í–ò–ë–û–†–£ –º—ñ—Å—Ü—è (–∑–±–µ—Ä—ñ–≥–∞—î–º–æ —á–µ—Ä–Ω–µ—Ç–∫—É)
  const handleGoToMap = () => {
    saveScenarioFormDraft({ description, price: donationAmount, date, time });

    const id = executorId || localStorage.getItem("scenario_receiverId") || urlExecutorId;
    if (id) {
      localStorage.setItem("scenario_receiverId", id);
      // –ø–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ –∑ —Ü—ñ—î—ó –≤–∫–ª–∞–¥–∫–∏ –ø–µ—Ä–µ–π—à–ª–∏ –Ω–∞ –º–∞–ø—É
      sessionStorage.setItem(VISITED_MAP_KEY, "1");
      // ‚úÖ –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –º–∞—Ä—à—Ä—É—Ç –∫–∞—Ä—Ç–∏ —É –†–ï–ñ–ò–ú–Ü –í–ò–ë–û–†–£
      navigate(`/map?pick=1&executor_id=${encodeURIComponent(id)}`);
    } else {
      setError("–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π.");
    }
  };

  const handleSubmit = async () => {
    setError("");

    const { data: userResp, error: userError } = await supabase.auth.getUser();
    const user = userResp?.user;
    if (userError || !user) {
      alert("–ü–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.");
      return;
    }

    // executor_id –±–µ—Ä–µ–º–æ –ª–∏—à–µ —ñ–∑ URL –∞–±–æ localStorage
    const currentExecutorId =
      new URLSearchParams(window.location.search).get("executor_id") ||
      localStorage.getItem("scenario_receiverId") ||
      executorId ||
      "";

    if (!currentExecutorId) {
      setError("–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π.");
      return;
    }
    if (currentExecutorId === user.id) {
      setError("–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å –Ω–µ –º–æ–∂–µ —Å–ø—ñ–≤–ø–∞–¥–∞—Ç–∏ —ñ–∑ –∑–∞–º–æ–≤–Ω–∏–∫–æ–º.");
      return;
    }

    const lat = Number(localStorage.getItem("latitude"));
    const lng = Number(localStorage.getItem("longitude"));
    if (!Number.isFinite(lat) || !Number.isFinite(lng)) {
      setError("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ.");
      return;
    }

    if (!date || !time) {
      setError("–î–∞—Ç–∞ —Ç–∞ —á–∞—Å —î –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–º–∏.");
      return;
    }

    const amount = Number(donationAmount);
    if (!Number.isFinite(amount) || amount <= 0) {
      setError("–°—É–º–∞ –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞—Ç–Ω—ñ–º —á–∏—Å–ª–æ–º.");
      return;
    }

    if (submitting) return;
    setSubmitting(true);

    try {
      const { error } = await supabase.from("scenarios").insert({
        sender_id: user.id,
        creator_id: user.id,
        receiver_id: currentExecutorId,
        executor_id: currentExecutorId,
        description: description.trim(),
        donation_amount_usdt: amount,
        date,
        time,
        status: "pending",
        latitude: lat,
        longitude: lng,
      });
      if (error) throw error;

      clearScenarioFormDraft();
      // –∑–∞–ª–∏—à–∞—î–º–æ scenario_receiverId ‚Äî –º–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—å –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é
      localStorage.removeItem("latitude");
      localStorage.removeItem("longitude");
      sessionStorage.removeItem(VISITED_MAP_KEY);

      alert("–°—Ü–µ–Ω–∞—Ä—ñ–π –∑–±–µ—Ä–µ–∂–µ–Ω–æ!");
      navigate("/my-orders");
    } catch (err: any) {
      alert("–ü–æ–º–∏–ª–∫–∞: " + (err?.message || "–Ω–µ–≤—ñ–¥–æ–º–∞"));
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className="scenario-page">
      <div className="scenario-shell">
        <h1 className="page-title">–ù–æ–≤–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π</h1>

        <form className="scenario-form" onSubmit={(e) => e.preventDefault()}>
          <label>
            –û–ø–∏—Å
            <textarea
              placeholder="–û–ø–∏—à—ñ—Ç—å, —â–æ —Å–∞–º–µ –º–∞—î –∑—Ä–æ–±–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å..."
              value={description}
              onChange={(e) => {
                setDescription(e.target.value);
                syncScenarioForm({ description: e.target.value }); // ‚úÖ –æ–±‚Äô—î–∫—Ç-–ø–∞—Ç—á
              }}
            />
          </label>

          <label>
            –°—É–º–∞ (USDT)
            <input
              type="number"
              step="0.000001"
              min="0"
              placeholder="100"
              value={donationAmount}
              onChange={(e) => {
                setDonationAmount(e.target.value);
                syncScenarioForm({ price: e.target.value }); // ‚úÖ –æ–±‚Äô—î–∫—Ç-–ø–∞—Ç—á
              }}
            />
          </label>

          <label>
            –î–∞—Ç–∞
            <input
              type="date"
              value={date}
              onChange={(e) => {
                setDate(e.target.value);
                syncScenarioForm({ date: e.target.value }); // ‚úÖ
              }}
            />
          </label>

          <label>
            –ß–∞—Å
            <input
              type="time"
              value={time}
              onChange={(e) => {
                setTime(e.target.value);
                syncScenarioForm({ time: e.target.value }); // ‚úÖ
              }}
            />
          </label>

          <button
            type="button"
            onClick={handleGoToMap}
            className={locationSet ? "selected-location-button" : ""}
            disabled={submitting}
            aria-live="polite"
          >
            {locationSet ? "‚úÖ –ú—ñ—Å—Ü–µ –æ–±—Ä–∞–Ω–æ!!!" : "üìç –û–±–µ—Ä–∏ –º—ñ—Å—Ü–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è"}
          </button>

          {error && <p style={{ color: "red", textAlign: "center" }}>{error}</p>}

          <button
            type="button"
            onClick={handleSubmit}
            className="submit-button"
            disabled={submitting}
          >
            {submitting ? "‚è≥ –ù–∞–¥—Å–∏–ª–∞—é‚Ä¶" : "‚úÖ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å—Ü–µ–Ω–∞—Ä—ñ–π"}
          </button>
        </form>
      </div>
    </div>
  );
}
