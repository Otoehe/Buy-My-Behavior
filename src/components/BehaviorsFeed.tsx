'use client'

// Behaviors Feed (full‚Äëscreen vertical, scroll‚Äësnap, BMB brand)
// ‚úÖ 1 –∫–∞—Ä—Ç–∫–∞ = 1 –µ–∫—Ä–∞–Ω (100vh), —Å–∫—Ä–æ–ª –ø–æ –æ–¥–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—É
// ‚úÖ –¢–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä—ñ—é –∑–≤–µ—Ä—Ö—É –∑–ª—ñ–≤–∞ —É –Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–æ–º—É —Ä–æ–∂–µ–≤–æ–º—É –±–ª–æ—Ü—ñ (—á–∏—Ç–∞–±–µ–ª—å–Ω–æ –Ω–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É)
// ‚úÖ –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å¬ª –ø—Ä–∞–≤–æ—Ä—É—á –∑–≤–µ—Ä—Ö—É, –∞–≤–∞—Ç–∞—Ä –≤–ª–∞—Å–Ω–∏–∫–∞ –∑–Ω–∏–∑—É –∑–ª—ñ–≤–∞ (–Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äî –ø–µ—Ä–µ—Ö—ñ–¥ —É –ø—Ä–æ—Ñ—ñ–ª—å)
// ‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–∏–±–æ—Ä—É —Å—Ç–æ—Ä–æ–Ω–∏ (–≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å/–∑–∞–º–æ–≤–Ω–∏–∫) ‚Äî –∑–Ω–∏–∑—É (—è–∫ –Ω–∞ –µ—Å–∫—ñ–∑—ñ)
// ‚úÖ –ú—É–∑–∏–∫–∞/–∑–≤—É–∫: —è–∫—â–æ —É –∞–π—Ç–µ–º–∞ —î –≤—ñ–¥–µ–æ ‚Äî –∫–µ—Ä—É—î–º–æ –∑–≤—É–∫–æ–º –≤—ñ–¥–µ–æ; —è–∫—â–æ —î music_url ‚Äî –∫–µ—Ä—É—î–º–æ –∞—É–¥—ñ–æ
// ‚öôÔ∏è –£ –≤–∞—à–æ–º—É —Ä–µ–ø–æ –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–≤–∏—Ç–∏ –ª–∏—à–µ —Ä–æ–∑–º—ñ—Ç–∫—É return(...) + —Å—Ç–∏–ª—ñ, –Ω–µ –∑–º—ñ–Ω—é—é—á–∏ —ñ—Å–Ω—É—é—á—É –ª–æ–≥—ñ–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Supabase

import React, { useEffect, useMemo, useRef, useState, useCallback } from 'react'

// ================================ Types ====================================
export type BehaviorItem = {
  id: number | string
  title?: string
  description?: string
  authorId?: string | null
  authorAvatarUrl?: string | null
  mediaUrl?: string | null // –≤—ñ–¥–µ–æ (–∑–≤—É–∫–æ–≤—ñ –¥–æ—Ä—ñ–∂–∫–∏ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è)
  posterUrl?: string | null
  musicUrl?: string | null // –æ–ø—Ü—ñ–π–Ω–æ: –æ–∫—Ä–µ–º–∏–π –∞—É–¥—ñ–æ—Ç—Ä–µ–∫
  createdAt?: string | null
}

export type BehaviorsFeedProps = {
  items: BehaviorItem[]
  onPickPerformer?: (id: BehaviorItem['id']) => void
  onPickCustomer?: (id: BehaviorItem['id']) => void
  onShare?: (id: BehaviorItem['id']) => void
  onOpenAuthor?: (authorId: string) => void
}

// ========================== Full‚Äëscreen Feed ===============================
export const BehaviorsFeedFullScreen: React.FC<BehaviorsFeedProps> = ({ items, onPickPerformer, onPickCustomer, onShare, onOpenAuthor }) => {
  const [activeId, setActiveId] = useState<BehaviorItem['id'] | null>(items?.[0]?.id ?? null)
  const [mutedMap, setMutedMap] = useState<Record<string | number, boolean>>({})

  const videoRefs = useRef<Record<string | number, HTMLVideoElement | null>>({})
  const audioRefs = useRef<Record<string | number, HTMLAudioElement | null>>({})
  const wrapRefs = useRef<Record<string | number, HTMLElement | null>>({})

  // snap observer
  useEffect(() => {
    const io = new IntersectionObserver(
      (entries) => {
        entries.forEach((ent) => {
          const id = (ent.target as HTMLElement).dataset.id!
          if (ent.isIntersecting && ent.intersectionRatio >= 0.7) setActiveId(id)
        })
      },
      { threshold: [0.7] }
    )
    Object.values(wrapRefs.current).forEach((el) => el && io.observe(el))
    return () => io.disconnect()
  }, [items])

  // play/pause only active
  useEffect(() => {
    Object.entries(videoRefs.current).forEach(([id, v]) => {
      if (!v) return
      const shouldPlay = String(id) === String(activeId)
      v.muted = !!mutedMap[id]
      if (shouldPlay) v.play().catch(() => {})
      else v.pause()
    })
    Object.entries(audioRefs.current).forEach(([id, a]) => {
      if (!a) return
      const shouldPlay = String(id) === String(activeId)
      a.muted = !!mutedMap[id]
      if (shouldPlay) a.play().catch(() => {})
      else a.pause()
    })
  }, [activeId, mutedMap])

  const container: React.CSSProperties = {
    height: '100vh',
    overflowY: 'auto',
    scrollSnapType: 'y mandatory',
    background: '#f8f5f6',
  }

  const section: React.CSSProperties = {
    position: 'relative',
    height: '100vh',
    scrollSnapAlign: 'start',
    display: 'grid',
    placeItems: 'center',
  }

  const media: React.CSSProperties = {
    position: 'absolute', inset: 0,
    width: '100%', height: '100%', objectFit: 'cover',
    background: 'linear-gradient(180deg,#ffd9e1,#ffeef2)'
  }

  const captionWrap: React.CSSProperties = {
    position: 'absolute', top: 12, left: 12, maxWidth: '76%',
    background: 'rgba(255,205,214,.9)', border: '2px solid #ffcdd6',
    borderRadius: 16, padding: '10px 12px', color: '#111'
  }
  const titleStyle: React.CSSProperties = { fontWeight: 900, fontSize: 16, marginBottom: 4 }
  const descStyle: React.CSSProperties = { fontSize: 14, lineHeight: 1.5 }

  const shareBtn: React.CSSProperties = {
    position: 'absolute', top: 12, right: 12,
    width: 40, height: 40, borderRadius: 999,
    border: '2px solid #ffcdd6', background: '#111', color: '#fff',
    display: 'grid', placeItems: 'center', fontWeight: 900, boxShadow: '0 8px 24px rgba(0,0,0,.25)'
  }

  const avatarWrap: React.CSSProperties = {
    position: 'absolute', left: 12, bottom: 70,
    width: 56, height: 56, borderRadius: '50%',
    border: '2px solid #ddd', overflow: 'hidden', background: '#fff', boxShadow: '0 6px 20px rgba(0,0,0,.18)', cursor: 'pointer'
  }

  const soundBtn: React.CSSProperties = {
    position: 'absolute', right: 12, bottom: 70,
    width: 44, height: 44, borderRadius: 999,
    border: '1px solid rgba(17,17,17,.2)', background: '#fff',
    display: 'grid', placeItems: 'center', fontWeight: 900, cursor: 'pointer'
  }

  const actionsWrap: React.CSSProperties = {
    position: 'absolute', left: 12, right: 12, bottom: 14,
    display: 'flex', justifyContent: 'space-between', gap: 12
  }
  const sideBtn: React.CSSProperties = {
    borderRadius: 999, padding: '10px 14px', fontWeight: 800,
    background: '#9ca3af', color: '#fff', border: 'none'
  }

  const fmt = (v?: string | null) => (v ? v : '')

  const handleShare = (it: BehaviorItem) => {
    const url = it.mediaUrl || window.location.href
    if (navigator.share) navigator.share({ title: it.title || 'Buy My Behavior', url }).catch(()=>{})
    else onShare?.(it.id)
  }

  const onToggleMute = (id: BehaviorItem['id']) => setMutedMap(prev => ({ ...prev, [String(id)]: !prev[String(id)] }))

  return (
    <div style={container}>
      {items.map((it) => {
        const id = String(it.id)
        const muted = !!mutedMap[id]
        return (
          <section key={id} data-id={id} ref={(el) => (wrapRefs.current[id] = el)} style={section}>
            {/* VIDEO (if present) */}
            {it.mediaUrl ? (
              <video
                ref={(v) => (videoRefs.current[id] = v)}
                src={it.mediaUrl || undefined}
                poster={it.posterUrl || undefined}
                style={media}
                playsInline muted loop preload="metadata" autoPlay
              />
            ) : (
              // Fallback –∫—Ä–∞—Å–∏–≤–∏–π –≥—Ä–∞–¥—ñ—î–Ω—Ç, —è–∫—â–æ –Ω–µ–º–∞—î –≤—ñ–¥–µ–æ
              <div style={media} />
            )}

            {/* MUSIC (optional separate track) */}
            {it.musicUrl && (
              <audio ref={(a) => (audioRefs.current[id] = a)} src={it.musicUrl || undefined} preload="metadata" />
            )}

            {/* CAPTION (top‚Äëleft) */}
            {(it.title || it.description) && (
              <div style={captionWrap}>
                {it.title && <div style={titleStyle}>{fmt(it.title)}</div>}
                {it.description && <div style={descStyle}>{fmt(it.description)}</div>}
              </div>
            )}

            {/* SHARE (top‚Äëright) */}
            <button aria-label="–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å" style={shareBtn} onClick={() => handleShare(it)}>‚Üó</button>

            {/* AVATAR (bottom‚Äëleft) */}
            <div
              aria-label="–ü—Ä–æ—Ñ—ñ–ª—å –∞–≤—Ç–æ—Ä–∞"
              style={avatarWrap}
              onClick={() => it.authorId && onOpenAuthor?.(it.authorId)}
              title="–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å"
            >
              {it.authorAvatarUrl ? (
                // eslint-disable-next-line @next/next/no-img-element
                <img src={it.authorAvatarUrl} alt="author" style={{ width: '100%', height: '100%', objectFit: 'cover' }} onError={(e)=>((e.currentTarget as HTMLImageElement).style.display='none')} />
              ) : (
                <div style={{ width: '100%', height: '100%', display: 'grid', placeItems: 'center', fontWeight: 900, color: '#111' }}>U</div>
              )}
            </div>

            {/* SOUND TOGGLE (bottom‚Äëright) */}
            {(it.mediaUrl || it.musicUrl) && (
              <button aria-label={muted ? '–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫' : '–í–∏–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫'} style={soundBtn} onClick={() => onToggleMute(it.id)}>
                {muted ? 'üîá' : 'üîä'}
              </button>
            )}

            {/* ACTIONS (bottom) */}
            <div style={actionsWrap}>
              <button style={sideBtn} onClick={() => onPickPerformer?.(it.id)}>–æ–±—Ä–∞—Ç–∏ —Å—Ç–æ—Ä–æ–Ω—É –≤–∏–∫–æ–Ω–∞–≤—Ü—è</button>
              <button style={sideBtn} onClick={() => onPickCustomer?.(it.id)}>–æ–±—Ä–∞—Ç–∏ —Å—Ç–æ—Ä–æ–Ω—É –∑–∞–º–æ–≤–Ω–∏–∫–∞</button>
            </div>
          </section>
        )
      })}
    </div>
  )
}

// ============================== Canvas Preview =============================
export default function BehaviorsFeedPreview() {
  const demo: BehaviorItem[] = [
    { id: 1, title: '–©–æ–¥–µ–Ω–Ω–∞ –ø—Ä–æ–≥—É–ª—è–Ω–∫–∞ 10–∫ –∫—Ä–æ–∫—ñ–≤', description: '–°—Ü–µ–Ω–∞—Ä—ñ–π —á–∏—Ç–∞—î—Ç—å—Å—è –ø–æ–≤–µ—Ä—Ö, –∫–æ–º–ø–∞–∫—Ç–Ω–æ –π —á–∏—Ç–∞–±–µ–ª—å–Ω–æ.', authorId: 'u1', authorAvatarUrl: null, mediaUrl: null, posterUrl: null },
    { id: 2, title: '–í—á–∞—Å–Ω–∏–π —Å–æ–Ω 22:30', description: `–ú‚Äô—è–∫–∏–π —Ä–æ–∂–µ–≤–∏–π –±–ª–æ–∫.
–ü—Ä–µ–≤‚Äô—é —É Canvas –±–µ–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤.`, authorId: 'u2', mediaUrl: null, posterUrl: null },
    { id: 3, title: '30 —Ö–≤ —á–∏—Ç–∞–Ω–Ω—è', description: '–ö–Ω–æ–ø–∫–∞ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å –ø—Ä–∞–≤–æ—Ä—É—á. –ê–≤–∞—Ç–∞—Ä –∑–Ω–∏–∑—É –ª—ñ–≤–æ—Ä—É—á.', authorId: 'u3', mediaUrl: null, posterUrl: null },
    { id: 4, title: '–î–æ–≤–≥–∏–π –æ–ø–∏—Å –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–µ—Ä–µ–Ω–æ—Å—É', description: `–¶–µ –¥—É–∂–µ –¥–æ–≤–≥–∏–π —Ç–µ–∫—Å—Ç –æ–ø–∏—Å—É, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î –ø–µ—Ä–µ–Ω–æ—Å —Ä—è–¥–∫—ñ–≤,
scroll‚Äësnap –º—ñ–∂ –µ–∫—Ä–∞–Ω–∞–º–∏ —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–æ–≥–æ –±–ª–æ–∫—É.`, authorId: 'u4', mediaUrl: null, posterUrl: null },
  ]

  return (
    <BehaviorsFeedFullScreen
      items={demo}
      onPickPerformer={(id) => alert('–í–∏–±—Ä–∞–Ω–æ —Å—Ç–æ—Ä–æ–Ω—É –≤–∏–∫–æ–Ω–∞–≤—Ü—è #' + id)}
      onPickCustomer={(id) => alert('–í–∏–±—Ä–∞–Ω–æ —Å—Ç–æ—Ä–æ–Ω—É –∑–∞–º–æ–≤–Ω–∏–∫–∞ #' + id)}
      onShare={(id) => alert('–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å #' + id)}
      onOpenAuthor={(aid) => alert('–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å: ' + aid)}
    />
  )
}

// =========================== –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è —É —Ä–µ–ø–æ ============================
// 1) –ù–µ —á—ñ–ø–∞—é—á–∏ –≤–∞—à—É –ª–æ–≥—ñ–∫—É –∑ Supabase, –ø—Ä–æ—Å—Ç–æ –ó–ê–ú–Ü–ù–Ü–¢–¨ JSX —É return(...) –≤–∞—à–æ–≥–æ BehaviorsFeed
//    –Ω–∞ —Ä–æ–∑–º—ñ—Ç–∫—É —Ü—ñ—î—ó –≤–µ—Ä—Å—ñ—ó (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑—ñ scroll‚Äësnap, —Å–µ–∫—Ü—ñ—ó 100vh —ñ –æ–≤–µ—Ä–ª–µ—ó).
//    –í–∞—à–∞ –ª–æ–≥—ñ–∫–∞ load()/IntersectionObserver/mute –∑–±–µ—Ä–µ–∂–µ—Ç—å—Å—è ‚Äî API —Å—É–º—ñ—Å–Ω–∏–π.
// 2) –î–æ–¥–∞–π—Ç–µ –æ–ø—Ü—ñ–π–Ω–æ –ø–æ–ª–µ music_url –≤ —Ç–∏–ø Behavior —Ç–∞ –º–∞–ø—ñ–Ω–≥ —É load(): —è–∫—â–æ —É –≤–∞—Å —î –æ–∫—Ä–µ–º–∏–π –∞—É–¥—ñ–æ—Ç—Ä–µ–∫.
// 3) –î–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤–∞—à author_avatar_url ‚Üí authorAvatarUrl, –∞ author_id ‚Üí authorId.
// 4) –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ ‚Äî –≤–∏–Ω–µ—Å—ñ—Ç—å —Å—Ç–∏–ª—ñ –≤ CSS; —Ç—É—Ç —É—Å–µ inline, —â–æ–± –ø—Ä–∞—Ü—é–≤–∞–ª–æ –∑—Ä–∞–∑—É.
