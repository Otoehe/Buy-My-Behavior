'use client'

// Single‚Äëfile preview for Canvas (no duplicate imports/default exports)
// Contains: KycGateModal (named export), KycToast (named), AccountStateModal (named),
// ensureReadyForLockFunds helper (named), and a Preview default export.
// In your repo, split into separate files as indicated in the comments near the end.

import React, { useEffect, useRef, useState } from 'react';
import { createPortal } from 'react-dom';

export type KycGateVariant = 'L0toL1' | 'L1toL2';

interface KycGateModalProps {
  open: boolean;
  variant: KycGateVariant;
  onClose: () => void;
  onStartKyc: () => void;
  freeKycLeft?: number;
  isKycCostShared?: boolean;
}

// ============================== KycGateModal ===============================
export const KycGateModal: React.FC<KycGateModalProps> = ({
  open,
  variant,
  onClose,
  onStartKyc,
  freeKycLeft,
  isKycCostShared = true,
}) => {
  const [mounted, setMounted] = useState(false);
  const dialogRef = useRef<HTMLDivElement>(null);

  useEffect(() => { setMounted(true); }, []);
  useEffect(() => {
    if (!open) return;
    const onKey = (e: KeyboardEvent) => { if (e.key === 'Escape') onClose(); };
    document.addEventListener('keydown', onKey);
    return () => document.removeEventListener('keydown', onKey);
  }, [open, onClose]);

  if (!open || !mounted) return null;

  const isFreeWindow = typeof freeKycLeft === 'number' && freeKycLeft > 0;
  const title = variant === 'L0toL1'
    ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –æ—Å–æ–±—É, —â–æ–± –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –µ—Å–∫—Ä–æ—É'
    : '–ü—ñ–¥–≤–∏—â–∏—Ç–∏ –ª—ñ–º—ñ—Ç –ø–ª–∞—Ç–µ–∂—ñ–≤';

  const overlayStyle: React.CSSProperties = {
    position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,
    background: 'rgba(0,0,0,.55)', display: 'grid', placeItems: 'center',
    zIndex: 999999, padding: 12,
  };
  const cardStyle: React.CSSProperties = {
    width: 'min(420px, 92vw)', maxHeight: '90vh', borderRadius: 20,
    border: '2px solid #ffcdd6', boxShadow: '0 20px 60px rgba(0,0,0,.25)',
    overflow: 'hidden', background: 'linear-gradient(180deg, rgba(255,205,214,0.92), rgba(255,227,232,0.92) 90%)',
    backdropFilter: 'blur(6px)'
  };
  const scrollBodyStyle: React.CSSProperties = { overflowY: 'auto', maxHeight: 'calc(90vh - 64px - 64px)' };
  const headerStyle: React.CSSProperties = { display: 'flex', alignItems: 'center', gap: 12, padding: 16 };
  const chipStyle: React.CSSProperties = { width: 48, height: 48, borderRadius: '50%', background: '#fff', display: 'grid', placeItems: 'center', boxShadow: '0 1px 2px rgba(0,0,0,.06)', border: '1px solid rgba(0,0,0,.06)' };
  const closeBtnStyle: React.CSSProperties = { marginLeft: 'auto', width: 36, height: 36, borderRadius: 999, background: 'rgba(0,0,0,.85)', color: '#fff', border: 'none', cursor: 'pointer' };
  const footerStyle: React.CSSProperties = { display: 'flex', justifyContent: 'flex-end', gap: 8, padding: 16, borderTop: '1px solid #f1d0d7', background: 'rgba(255,255,255,.5)' };
  const btnPri: React.CSSProperties = { borderRadius: 999, padding: '10px 16px', fontWeight: 800, background: '#000', color: '#fff', border: 'none', cursor: 'pointer' };
  const btnSec: React.CSSProperties = { borderRadius: 999, padding: '10px 16px', fontWeight: 600, background: 'rgba(255,255,255,.8)', color: '#000', border: '1px solid rgba(17,17,17,.15)', cursor: 'pointer' };

  const lawBox = (
    <div style={{ marginTop: 8, borderRadius: 12, border: '1px dashed #f5a9b7', background: '#fff6f8', padding: '8px 10px', color: '#6b2338', fontSize: 13 }}>
      <strong>KYC</strong> ‚Äî –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π –∫—Ä–æ–∫ –∑–≥—ñ–¥–Ω–æ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏ (AML/–ö–Ü–°) –¥–ª—è –ø–ª–∞—Ç–µ–∂—ñ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ.
    </div>
  );

  const modal = (
    <div style={overlayStyle} role="presentation" onClick={onClose}>
      <div ref={dialogRef} onClick={(e) => e.stopPropagation()} role="dialog" aria-modal="true" aria-labelledby="kyc-modal-title" aria-describedby="kyc-modal-desc" style={cardStyle}>
        {/* Header */}
        <header style={headerStyle}>
          <div style={chipStyle} aria-hidden>üîë</div>
          <h2 id="kyc-modal-title" style={{ margin: 0, fontSize: 18, fontWeight: 900, color: '#111' }}>{title}</h2>
          <button aria-label="–ó–∞–∫—Ä–∏—Ç–∏" onClick={onClose} style={closeBtnStyle}>√ó</button>
        </header>

        <div style={scrollBodyStyle}>
          {/* Body */}
          {variant === 'L0toL1' ? (
            <div style={{ padding: '0 20px 14px' }}>
              <p id="kyc-modal-desc" style={{ fontSize: 15, lineHeight: 1.6, color: 'rgba(0,0,0,.9)', margin: '4px 0 12px' }}>
                –©–æ–± –±–µ–∑–ø–µ—á–Ω–æ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —Å—É–º—É –≤ –µ—Å–∫—Ä–æ—É, —à–≤–∏–¥–∫–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –æ—Å–æ–±—É (<strong>‚âà2 —Ö–≤</strong>). –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—é—Ç—å—Å—è –ø–ª–∞—Ç–µ–∂—ñ –¥–æ <strong>1‚ÄØ000 USDT</strong> —ñ —É–≥–æ–¥–∞ –±—É–¥–µ –∑–∞—Ö–∏—â–µ–Ω–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏.
              </p>

              {isFreeWindow ? (
                <div style={{ marginTop: 8, borderRadius: 12, border: '1px solid rgba(16,185,129,.5)', background: 'rgba(240,253,244,.9)', padding: '8px 10px', color: '#064e3b', fontSize: 14 }}>
                  <strong>–ü–µ—Ä—à—ñ 100 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ‚Äî KYC –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ.</strong> –ú–∏ –ø–æ–∫—Ä–∏–≤–∞—î–º–æ –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
                  {typeof freeKycLeft === 'number' && (
                    <span style={{ marginLeft: 8, display: 'inline-block', padding: '2px 8px', background: '#dcfce7', borderRadius: 999, fontSize: 12 }}>–ó–∞–ª–∏—à–∏–ª–æ—Å—å –º—ñ—Å—Ü—å: {freeKycLeft}</span>
                  )}
                </div>
              ) : (
                <div style={{ marginTop: 8, borderRadius: 12, border: '1px solid rgba(244,114,182,.6)', background: 'rgba(255,255,255,.8)', padding: '8px 10px', color: '#7a2941', fontSize: 14 }}>
                  –ü—ñ—Å–ª—è –ø–µ—Ä—à–∏—Ö 100 –≤–∞—Ä—Ç—ñ—Å—Ç—å KYC <strong>–Ω–µ —Å–ø–∏—Å—É—î—Ç—å—Å—è –Ω–∞–ø–µ—Ä–µ–¥</strong> ‚Äî –º–∏ –∫–æ–º–ø–µ–Ω—Å—É—î–º–æ —ó—ó –∑ –≤–∞—à–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ –µ—Å–∫—Ä–æ—É (–¥–æ <strong>3 USDT</strong> —Å—É–º–∞—Ä–Ω–æ).
                  {isKycCostShared && <> –ú º—è–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: <strong>1.5 USDT</strong> –∑ –∫–æ–∂–Ω–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ —É –ø–µ—Ä—à—ñ–π —É–≥–æ–¥—ñ.</>}
                </div>
              )}

              {lawBox}

              <ul style={{ margin: '8px 0 4px 22px', color: '#222', fontSize: 14 }}>
                <li>–õ—ñ–º—ñ—Ç –ø—ñ—Å–ª—è KYC: –¥–æ 1‚ÄØ000 USDT –∑–∞ —É–≥–æ–¥—É / 2‚ÄØ000 USDT –∑–∞ –¥–µ–Ω—å.</li>
                <li>–í–∞—à—ñ –¥–∞–Ω—ñ –∑–∞—Ö–∏—â–µ–Ω—ñ; –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ KYC.</li>
              </ul>

              <div style={{ marginTop: 10, borderRadius: 12, border: '1px dashed rgba(17,17,17,.15)', background: 'rgba(255,255,255,.7)', padding: '8px 10px', color: '#111', fontSize: 13 }}>
                <strong>–ü—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó KYC</strong> ‚Äî –∑—Ä–æ–±—ñ—Ç—å –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, —â–æ–± <strong>–∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ —Ä–æ–±–æ—á–∏–π –∞–∫–∞—É–Ω—Ç</strong> —ñ –ø–æ—á–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.
              </div>
            </div>
          ) : (
            <div style={{ padding: '0 20px 14px' }}>
              <p id="kyc-modal-desc" style={{ fontSize: 15, lineHeight: 1.6, color: 'rgba(0,0,0,.9)', margin: '4px 0 12px' }}>
                –ü–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ? –ü—Ä–æ–π–¥—ñ—Ç—å <strong>—Ä–æ–∑—à–∏—Ä–µ–Ω—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é</strong> (<strong>‚âà3‚Äì5 —Ö–≤</strong>) —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –ª—ñ–º—ñ—Ç –¥–æ <strong>10‚ÄØ000 USDT</strong> –∑–∞ —É–≥–æ–¥—É —Ç–∞ <strong>20‚ÄØ000 USDT</strong> –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å.
              </p>
              <div style={{ marginTop: 8, borderRadius: 12, border: '1px solid rgba(59,130,246,.5)', background: 'rgba(239,246,255,.8)', padding: '8px 10px', color: '#1e3a8a', fontSize: 13 }}>
                –Ø–∫—â–æ –≤–∞—à–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞/—É–≥–æ–¥–∏ –º–æ–∂—É—Ç—å –æ—Ü—ñ–Ω—é–≤–∞—Ç–∏—Å—å –≤–∏—â–µ <strong>10‚ÄØ000 USDT</strong>, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–æ–π–¥—ñ—Ç—å <strong>–≥–ª–∏–±—à—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é (EDD)</strong>.
              </div>
              {lawBox}
              <ul style={{ margin: '8px 0 4px 22px', color: '#222', fontSize: 14 }}>
                <li>–°—Ç–∞–Ω –ª—ñ–º—ñ—Ç—ñ–≤ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —É –≤–∞—à–æ–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ.</li>
                <li>–ü–æ–≤—Ç–æ—Ä–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ä–æ–±–∏–º–æ –ª–∏—à–µ –∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ.</li>
              </ul>
            </div>
          )}
        </div>

        {/* Footer */}
        <footer style={footerStyle}>
          <button style={btnSec} onClick={onClose}>–ü—ñ–∑–Ω—ñ—à–µ</button>
          <button style={btnPri} onClick={onStartKyc}>–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é</button>
        </footer>
      </div>
    </div>
  );

  return createPortal(modal, document.body);
};

// ================================ KycToast =================================
export const KycToast: React.FC<{ show: boolean; message: string; onClose: () => void; variant?: 'info' | 'success' | 'warning'; autoHideMs?: number; }>
= ({ show, message, onClose, variant = 'info', autoHideMs = 6000 }) => {
  useEffect(() => {
    if (!show) return;
    const t = setTimeout(onClose, autoHideMs);
    return () => clearTimeout(t);
  }, [show, autoHideMs, onClose]);

  if (!show) return null;
  const bg = variant === 'success' ? 'rgba(240,253,244,.95)' : variant === 'warning' ? 'rgba(254,243,199,.96)' : 'rgba(255,205,214,.96)';
  const border = variant === 'success' ? '1px solid rgba(16,185,129,.5)' : variant === 'warning' ? '1px solid rgba(245,158,11,.5)' : '1px solid #ffcdd6';

  return (
    <div style={{ position: 'fixed', top: 12, left: 0, right: 0, display: 'grid', placeItems: 'center', zIndex: 999998 }}>
      <div style={{ maxWidth: 480, width: 'calc(100% - 24px)', background: bg, border, boxShadow: '0 8px 24px rgba(0,0,0,.18)', borderRadius: 16, padding: '10px 14px', color: '#111', fontWeight: 600 }}>
        <div style={{ display: 'flex', gap: 10, alignItems: 'center' }}>
          <span>üîî</span>
          <div style={{ lineHeight: 1.4 }}>{message}</div>
          <button onClick={onClose} aria-label="–ó–∞–∫—Ä–∏—Ç–∏" style={{ marginLeft: 'auto', border: 'none', background: 'transparent', fontSize: 18, cursor: 'pointer' }}>√ó</button>
        </div>
      </div>
    </div>
  );
};

// ============================ AccountStateModal ============================
export const AccountStateModal: React.FC<{ open: boolean; state: 'pending' | 'active' | 'read_only' | 'suspended'; onClose: () => void; onActivate: () => void; }>
= ({ open, state, onClose, onActivate }) => {
  const [mounted, setMounted] = useState(false);
  const ref = useRef<HTMLDivElement>(null);
  useEffect(() => setMounted(true), []);
  useEffect(() => {
    if (!open) return;
    const onKey = (e: KeyboardEvent) => e.key === 'Escape' && onClose();
    document.addEventListener('keydown', onKey);
    return () => document.removeEventListener('keydown', onKey);
  }, [open, onClose]);
  if (!open || !mounted) return null;

  const overlay: React.CSSProperties = { position: 'fixed', inset: 0, background: 'rgba(0,0,0,.55)', display: 'grid', placeItems: 'center', zIndex: 999999, padding: 12 };
  const card: React.CSSProperties = { width: 'min(420px,92vw)', maxHeight: '90vh', background: 'linear-gradient(180deg, rgba(255,205,214,0.92), rgba(255,227,232,0.92) 90%)', border: '2px solid #ffcdd6', borderRadius: 20, boxShadow: '0 20px 60px rgba(0,0,0,.25)', overflow: 'hidden', backdropFilter: 'blur(6px)' };
  const header: React.CSSProperties = { display: 'flex', alignItems: 'center', gap: 12, padding: 16 };
  const chip: React.CSSProperties = { width: 48, height: 48, borderRadius: '50%', background: '#fff', display: 'grid', placeItems: 'center', boxShadow: '0 1px 2px rgba(0,0,0,.06)', border: '1px solid rgba(0,0,0,.06)' };
  const footer: React.CSSProperties = { display: 'flex', justifyContent: 'flex-end', gap: 8, padding: 16, borderTop: '1px solid #f1d0d7', background: 'rgba(255,255,255,.5)' };
  const btnPri: React.CSSProperties = { borderRadius: 999, padding: '10px 16px', fontWeight: 800, background: '#000', color: '#fff', border: 'none', cursor: 'pointer' };
  const btnSec: React.CSSProperties = { borderRadius: 999, padding: '10px 16px', fontWeight: 600, background: 'rgba(255,255,255,.8)', color: '#000', border: '1px solid rgba(17,17,17,.15)', cursor: 'pointer' };

  const title = state === 'read_only' ? '–í–∞—à –∞–∫–∞—É–Ω—Ç —É —Ä–µ–∂–∏–º—ñ –ø–µ—Ä–µ–≥–ª—è–¥—É' : state === 'suspended' ? '–ê–∫–∞—É–Ω—Ç –ø—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–æ' : '–°—Ç–∞—Ç—É—Å –∞–∫–∞—É–Ω—Ç–∞';

  const body = (
    <div style={{ padding: '0 20px 14px', overflowY: 'auto', maxHeight: 'calc(90vh - 64px - 64px)' }}>
      {state === 'read_only' ? (
        <>
          <p style={{ fontSize: 15, lineHeight: 1.6, color: 'rgba(0,0,0,.9)', margin: '4px 0 12px' }}>
            –©–æ–± <strong>–∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ —Ä–æ–±–æ—á–∏–π –∞–∫–∞—É–Ω—Ç</strong> —ñ –ø–æ—á–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∑—Ä–æ–±—ñ—Ç—å –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.
          </p>
          <div style={{ marginTop: 8, borderRadius: 12, border: '1px dashed rgba(17,17,17,.15)', background: 'rgba(255,255,255,.7)', padding: '8px 10px', color: '#111', fontSize: 13 }}>
            –ü–æ—Ä–∞–¥–∞: —è–∫—â–æ —É –≤–∞—Å —î —ñ–Ω–≤–∞–π—Ç –∞–º–±–∞—Å–∞–¥–æ—Ä–∞ ‚Äî –≤–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.
          </div>
        </>
      ) : state === 'suspended' ? (
        <p style={{ fontSize: 15 }}>–ó –º—ñ—Ä–∫—É–≤–∞–Ω—å –±–µ–∑–ø–µ–∫–∏ –∞–∫–∞—É–Ω—Ç —Ç–∏–º—á–∞—Å–æ–≤–æ –ø—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–æ. –ó–≤‚Äô—è–∂—ñ—Ç—å—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é.</p>
      ) : (
        <p style={{ fontSize: 15 }}>–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω: {state}</p>
      )}
    </div>
  );

  const modal = (
    <div style={overlay} role="presentation" onClick={onClose}>
      <div ref={ref} onClick={(e) => e.stopPropagation()} role="dialog" aria-modal="true" aria-labelledby="acc-modal-title" style={card}>
        <header style={header}>
          <div style={chip} aria-hidden>‚ö†Ô∏è</div>
          <h2 id="acc-modal-title" style={{ margin: 0, fontSize: 18, fontWeight: 900, color: '#111' }}>{title}</h2>
          <button aria-label="–ó–∞–∫—Ä–∏—Ç–∏" onClick={onClose} style={{ marginLeft: 'auto', width: 36, height: 36, borderRadius: 999, background: 'rgba(0,0,0,.85)', color: '#fff', border: 'none', cursor: 'pointer' }}>√ó</button>
        </header>
        {body}
        <footer style={footer}>
          <button style={btnSec} onClick={onClose}>–ü—ñ–∑–Ω—ñ—à–µ</button>
          {state === 'read_only' && <button style={btnPri} onClick={onActivate}>–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –∑–∞—Ä–∞–∑</button>}
        </footer>
      </div>
    </div>
  );

  return createPortal(modal, document.body);
};

// ========================= ensureReadyForLockFunds =========================
export type ProfileLike = {
  kyc_status?: 'passed' | 'failed' | 'pending' | null;
  account_state?: 'pending' | 'active' | 'read_only' | 'suspended' | null;
};
export function ensureReadyForLockFunds({ profile, openKyc, openAccountState }: { profile: ProfileLike | null | undefined; openKyc: () => void; openAccountState: () => void; }) {
  if (!profile) { openKyc(); return false; }
  if (profile.account_state === 'read_only' || profile.account_state === 'suspended') { openAccountState(); return false; }
  if (profile.kyc_status !== 'passed') { openKyc(); return false; }
  return true;
}

// ============================== Canvas Preview =============================
export default function KycGatePreview() {
  const [open, setOpen] = useState(true);
  const [variant, setVariant] = useState<KycGateVariant>('L0toL1');
  const [free, setFree] = useState<number>(42);
  const [toast, setToast] = useState<string | null>('–ü–µ—Ä—à—ñ 100 ‚Äî KYC –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ. –î–∞–ª—ñ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—è –¥–æ 3 USDT –∑ –ø–µ—Ä—à–æ–≥–æ –µ—Å–∫—Ä–æ—É.');

  return (
    <div style={{ padding: 24 }}>
      <div style={{ display: 'flex', gap: 8, marginBottom: 12 }}>
        <button onClick={() => { setOpen(true); setVariant('L0toL1'); }} style={{ padding: '8px 12px', borderRadius: 12, border: '1px solid #ddd', cursor: 'pointer' }}>–ü–æ–∫–∞–∑–∞—Ç–∏ L0‚ÜíL1</button>
        <button onClick={() => { setOpen(true); setVariant('L1toL2'); }} style={{ padding: '8px 12px', borderRadius: 12, border: '1px solid #ddd', cursor: 'pointer' }}>–ü–æ–∫–∞–∑–∞—Ç–∏ L1‚ÜíL2</button>
        <button onClick={() => setFree((f) => (f > 0 ? f - 1 : 0))} style={{ padding: '8px 12px', borderRadius: 12, border: '1px solid #ddd', cursor: 'pointer' }}>-1 free</button>
        <button onClick={() => setFree(0)} style={{ padding: '8px 12px', borderRadius: 12, border: '1px solid #ddd', cursor: 'pointer' }}>Free = 0</button>
        <button onClick={() => setToast('–ü–µ—Ä—à—ñ 100 ‚Äî KYC –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ. –î–∞–ª—ñ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—è –¥–æ 3 USDT –∑ –ø–µ—Ä—à–æ–≥–æ –µ—Å–∫—Ä–æ—É.')} style={{ padding: '8px 12px', borderRadius: 12, border: '1px solid #ddd', cursor: 'pointer' }}>Show toast</button>
      </div>

      <KycGateModal
        open={open}
        onClose={() => setOpen(false)}
        onStartKyc={() => alert('Start KYC')}
        variant={variant}
        freeKycLeft={free}
        isKycCostShared
      />

      <KycToast show={!!toast} message={toast ?? ''} onClose={() => setToast(null)} />
    </div>
  );
}

// ========================= Split into files in repo ========================
// Create these files in your project:
// 1) src/components/KycGateModal.tsx          -> export default KycGateModal
// 2) src/components/KycToast.tsx              -> export default KycToast
// 3) src/components/AccountStateModal.tsx     -> export default AccountStateModal
// 4) src/lib/ensureReadyForLockFunds.ts       -> export function ensureReadyForLockFunds
// (Copy the corresponding blocks from this Canvas file.)
