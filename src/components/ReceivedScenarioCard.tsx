// src/components/ReceivedScenarioCard.tsx
import React, { useEffect, useState } from 'react';
import { supabase } from '../lib/supabase';
import ScenarioDisputeBlock from './ScenarioDisputeBlock'; // ‚¨ÖÔ∏è –î–û–î–ê–ù–û

interface ReceivedScenarioCardProps { scenarioId: string; }
interface Scenario {
  id: string;
  title?: string;
  description: string;
  donation_amount_usdt: number | null;
  address?: string | null;
  date: string | null;
  time: string | null;
  status: string | null;
}

export default function ReceivedScenarioCard({ scenarioId }: ReceivedScenarioCardProps) {
  const [scenario, setScenario] = useState<Scenario | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    (async () => {
      const { data, error } = await supabase
        .from('scenarios')            // ‚úÖ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ —Ç–∞–±–ª–∏—Ü—è
        .select('*')
        .eq('id', scenarioId)
        .single();
      if (!error) setScenario(data as any);
      setLoading(false);
    })();
  }, [scenarioId]);

  const agreeToScenario = async () => {
    const { error } = await supabase
      .from('scenarios')
      .update({ status: 'agreed' })
      .eq('id', scenarioId);
    if (!error) setScenario((prev) => prev ? { ...prev, status: 'agreed' } : null);
  };

  if (loading) return <div className="text-center">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶</div>;
  if (!scenario) return <div className="text-red-500">–°—Ü–µ–Ω–∞—Ä—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</div>;

  return (
    <div className="bg-white p-5 rounded-2xl shadow-xl space-y-3 border border-gray-200">
      <h2 className="text-xl font-bold text-gray-800">{scenario.title || '–°—Ü–µ–Ω–∞—Ä—ñ–π'}</h2>
      <p className="text-gray-700">{scenario.description}</p>
      <p><strong>üí∞ –°—É–º–∞:</strong> {scenario.donation_amount_usdt ?? '‚Äî'} USDT</p>
      {scenario.address && <p><strong>üìç –ê–¥—Ä–µ—Å–∞:</strong> {scenario.address}</p>}
      <p><strong>üïì –î–∞—Ç–∞:</strong> {scenario.date || '‚Äî'} –æ {scenario.time || '‚Äî'}</p>
      <p><strong>üìå –°—Ç–∞—Ç—É—Å:</strong> {scenario.status || '‚Äî'}</p>

      {scenario.status === 'created' && (
        <button
          onClick={agreeToScenario}
          className="bg-black hover:bg-gray-800 text-white px-5 py-2 rounded-full transition"
        >
          ‚úÖ –ü–û–ì–û–î–ò–¢–ò –ó–ê–ú–û–í–õ–ï–ù–ù–Ø
        </button>
      )}

      {/* ‚¨áÔ∏è –ë–ª–æ–∫ —Å–ø–æ—Ä—É/–≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è/–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ–¥–æ–∫–∞–∑—ñ–≤ */}
      <ScenarioDisputeBlock scenarioId={scenarioId} />
    </div>
  );
}
