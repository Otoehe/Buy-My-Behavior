// üìÑ src/lib/pushNotifications.ts ‚Äî —Å–∏—Å—Ç–µ–º–∞ push-—Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è BuyMyBehavior

import React from 'react';

// === –¢–∏–ø–∏ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å ===
export interface NotificationData {
  title: string;
  body: string;
  icon?: string;
  tag?: string;
  requireSound?: boolean;
}

export interface ScenarioNotificationEvent {
  scenario_id: string;
  user_id: string;
  status: string;
  type: 'status_change' | 'new_scenario' | 'agreement' | 'completion';
  title: string;
  description: string;
  amount?: number;
}

// === –°—Ç–∞—Ç—É—Å –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ===
export type NotificationPermission = 'granted' | 'denied' | 'default';

// === –ö–ª–∞—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏ ===
class PushNotificationManager {
  private audio: HTMLAudioElement | null = null;
  private lastNotificationTime: number = 0;
  private readonly NOTIFICATION_COOLDOWN = 2000; // 2 —Å–µ–∫—É–Ω–¥–∏ –º—ñ–∂ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏
  private notificationHistory: Set<string> = new Set(); // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –¥—É–±–ª—é–≤–∞–Ω–Ω—é

  constructor() {
    this.initializeAudio();
  }

  // === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª—É ===
  private initializeAudio() {
    try {
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ–∞–π–ª –∑ public –ø–∞–ø–∫–∏
      this.audio = new Audio('/notification.mp3');
      this.audio.volume = 0.5;
      this.audio.preload = 'auto';
    } catch (error) {
      console.warn('üîá –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—É–∫–æ–≤–∏–π —Ñ–∞–π–ª:', error);
    }
  }

  // === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ Notification API ===
  public isSupported(): boolean {
    return 'Notification' in window;
  }

  // === –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É –¥–æ–∑–≤–æ–ª—É ===
  public getPermissionStatus(): NotificationPermission {
    if (!this.isSupported()) return 'denied';
    return Notification.permission as NotificationPermission;
  }

  // === –ó–∞–ø–∏—Ç –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ===
  public async requestPermission(): Promise<NotificationPermission> {
    if (!this.isSupported()) {
      console.warn('üö´ –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î Notification API');
      return 'denied';
    }

    if (this.getPermissionStatus() === 'granted') {
      return 'granted';
    }

    try {
      const permission = await Notification.requestPermission();
      console.log('üîî –°—Ç–∞—Ç—É—Å –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', permission);
      return permission as NotificationPermission;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
      return 'denied';
    }
  }

  // === –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª—É ===
  private playNotificationSound(): void {
    if (!this.audio) return;

    try {
      // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –∑–≤—É–∫ –∑ –ø–æ—á–∞—Ç–∫—É
      this.audio.currentTime = 0;
      const playPromise = this.audio.play();
      
      if (playPromise !== undefined) {
        playPromise.catch(error => {
          console.warn('üîá –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—É–∫ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
        });
      }
    } catch (error) {
      console.warn('üîá –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É:', error);
    }
  }

  // === –ü–æ–∫–∞–∑ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ===
  public async showNotification(data: NotificationData): Promise<boolean> {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
    const notificationKey = `${data.tag}-${Date.now()}`;
    if (data.tag && this.notificationHistory.has(data.tag)) {
      console.log('‚è≥ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è:', data.tag);
      return false;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ cooldown
    const now = Date.now();
    if (now - this.lastNotificationTime < this.NOTIFICATION_COOLDOWN) {
      console.log('‚è≥ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ cooldown');
      return false;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∑–≤–æ–ª—É
    const permission = this.getPermissionStatus();
    if (permission !== 'granted') {
      console.warn('üö´ –ù–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –ø–æ–∫–∞–∑ —Å–ø–æ–≤—ñ—â–µ–Ω—å');
      return false;
    }

    try {
      // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
      if (data.requireSound) {
        this.playNotificationSound();
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞—Ç–∏–≤–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
      const notification = new Notification(data.title, {
        body: data.body,
        icon: data.icon || '/favicon.ico',
        tag: data.tag || 'bmb-notification',
        badge: '/favicon.ico',
        requireInteraction: true, // –ù–µ –∑–Ω–∏–∫–∞—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
        silent: false // –î–æ–∑–≤–æ–ª—è—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π –∑–≤—É–∫
      });

      // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–ª—ñ–∫ –ø–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—é
      notification.onclick = () => {
        window.focus();
        notification.close();
      };

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        notification.close();
      }, 8000);

      // –ó–∞–ø–∏—Å—É—î–º–æ –≤ —ñ—Å—Ç–æ—Ä—ñ—é
      if (data.tag) {
        this.notificationHistory.add(data.tag);
        // –û—á–∏—â–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —á–µ—Ä–µ–∑ 1 —Ö–≤–∏–ª–∏–Ω—É
        setTimeout(() => {
          this.notificationHistory.delete(data.tag!);
        }, 60000);
      }

      this.lastNotificationTime = now;
      console.log('‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø–æ–∫–∞–∑–∞–Ω–æ:', data.title);
      return true;

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
      return false;
    }
  }

  // === –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω —Å—Ç–∞—Ç—É—Å—É —Å—Ü–µ–Ω–∞—Ä—ñ—é ===
  public async handleScenarioStatusChange(
    oldStatus: string, 
    newStatus: string, 
    scenario: any, 
    currentUserId: string
  ): Promise<void> {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏—á–µ—Ç–Ω–∏–π –¥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é
    const isInvolved = currentUserId === scenario.creator_id || currentUserId === scenario.executor_id;
    if (!isInvolved) return;

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const isExecutor = currentUserId === scenario.executor_id;
    const isCustomer = currentUserId === scenario.creator_id;

    let notificationData: NotificationData | null = null;

    // –õ–æ–≥—ñ–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É
    if (oldStatus !== 'agreed' && newStatus === 'agreed') {
      // –£–≥–æ–¥—É –ø–æ–≥–æ–¥–∂–µ–Ω–æ
      notificationData = {
        title: 'ü§ù –£–≥–æ–¥—É –ø–æ–≥–æ–¥–∂–µ–Ω–æ!',
        body: `–°—Ü–µ–Ω–∞—Ä—ñ–π "${scenario.description?.slice(0, 50)}..." –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –æ–±–æ–º–∞ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏. –°—É–º–∞: ${scenario.donation_amount_usdt} USDT`,
        tag: `agreement-${scenario.id}`,
        requireSound: true
      };
    } else if (oldStatus !== 'completed' && newStatus === 'completed') {
      // –°—Ü–µ–Ω–∞—Ä—ñ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ
      notificationData = {
        title: '‚úÖ –°—Ü–µ–Ω–∞—Ä—ñ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!',
        body: `–ö–æ—à—Ç–∏ —Ä–æ–∑–ø–æ–¥—ñ–ª–µ–Ω–æ —á–µ—Ä–µ–∑ escrow. ${isExecutor ? '–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 90% –≤—ñ–¥ —Å—É–º–∏ —É–≥–æ–¥–∏.' : '–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.'}`,
        tag: `completion-${scenario.id}`,
        requireSound: true
      };
    }

    // –ü–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫—â–æ —î –¥–∞–Ω—ñ
    if (notificationData) {
      await this.showNotification(notificationData);
    }
  }

  // === –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π (–¥–ª—è –≤–∏–∫–æ–Ω–∞–≤—Ü—è) ===
  public async notifyNewScenario(scenario: any, currentUserId: string): Promise<void> {
    // –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å
    // (—Ü–µ –ª–æ–≥—ñ–∫–∞ –±—É–¥–µ –∑–∞–ª–µ–∂–∞—Ç–∏ –≤—ñ–¥ —Ç–æ–≥–æ, —è–∫ –≤–∏–∑–Ω–∞—á–∞—é—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó)
    
    const notificationData: NotificationData = {
      title: 'üÜï –ù–æ–≤–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π –¥–æ—Å—Ç—É–ø–Ω–∏–π!',
      body: `"${scenario.description?.slice(0, 60)}..." ‚Ä¢ –°—É–º–∞: ${scenario.donation_amount_usdt} USDT`,
      tag: `new-scenario-${scenario.id}`,
      requireSound: true
    };

    await this.showNotification(notificationData);
  }

  // === –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ===
  public async sendTestNotification(): Promise<boolean> {
    const testData: NotificationData = {
      title: 'üîî –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è BMB',
      body: '–°–∏—Å—Ç–µ–º–∞ push-—Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ! üéâ',
      tag: 'test-notification',
      requireSound: true
    };

    return await this.showNotification(testData);
  }

  // === –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ ===
  public cleanup(): void {
    if (this.audio) {
      this.audio.pause();
      this.audio = null;
    }
    this.notificationHistory.clear();
  }
}

// === –ï–∫—Å–ø–æ—Ä—Ç singleton instance ===
export const pushNotificationManager = new PushNotificationManager();

// === –£—Ç–∏–ª—ñ—Ç–∞—Ä–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó ===
export const checkNotificationSupport = (): boolean => {
  return pushNotificationManager.isSupported();
};

export const requestNotificationPermission = (): Promise<NotificationPermission> => {
  return pushNotificationManager.requestPermission();
};

export const getNotificationPermissionStatus = (): NotificationPermission => {
  return pushNotificationManager.getPermissionStatus();
};

export const sendTestNotification = (): Promise<boolean> => {
  return pushNotificationManager.sendTestNotification();
};

// === React Hook –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ ===
export const useNotifications = () => {
  const [permissionStatus, setPermissionStatus] = React.useState<NotificationPermission>(
    getNotificationPermissionStatus()
  );

  const requestPermission = async () => {
    const status = await requestNotificationPermission();
    setPermissionStatus(status);
    return status;
  };

  const sendTest = () => {
    return sendTestNotification();
  };

  return {
    permissionStatus,
    isSupported: checkNotificationSupport(),
    requestPermission,
    sendTest
  };
};

// === –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è showNotification ===
export interface NotificationOptions {
  body?: string;
  icon?: string;
  badge?: string;
  tag?: string;
  requireInteraction?: boolean;
  silent?: boolean;
  vibrate?: number[];
  data?: any;
  dir?: 'auto' | 'ltr' | 'rtl';
  lang?: string;
  renotify?: boolean;
  timestamp?: number;
  image?: string;
  sound?: boolean;
  soundUrl?: string;
  autoClose?: number; // –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —á–µ—Ä–µ–∑ N –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥
}

export const showNotification = async (
  title: string, 
  options: NotificationOptions = {}
): Promise<boolean> => {
  // üîç 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ Notification API
  if (!('Notification' in window)) {
    console.warn('üö´ –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î Notification API');
    console.warn(`üì¢ Fallback: ${title} - ${options.body || ''}`);
    return false;
  }

  // üîë 2. –ó–∞–ø–∏—Ç –¥–æ–∑–≤–æ–ª—É, —è–∫—â–æ –Ω–µ –Ω–∞–¥–∞–Ω–∏–π
  let permission = Notification.permission;
  
  if (permission === 'default') {
    try {
      permission = await Notification.requestPermission();
    } catch (error) {
      console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
      console.warn(`üì¢ Fallback: ${title} - ${options.body || ''}`);
      return false;
    }
  }

  if (permission !== 'granted') {
    console.warn('üö´ –î–æ–∑–≤—ñ–ª –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –Ω–∞–¥–∞–Ω–∏–π');
    console.warn(`üì¢ Fallback: ${title} - ${options.body || ''}`);
    return false;
  }

  try {
    // üîä 3. –û–±—Ä–æ–±–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∑–≤—É–∫—É –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    if (options.sound !== false) {
      const soundUrl = options.soundUrl || '/notification.wav';
      
      try {
        const audio = new Audio(soundUrl);
        audio.volume = 0.6; // –û–ø—Ç–∏–º–∞–ª—å–Ω–∞ –≥—É—á–Ω—ñ—Å—Ç—å
        audio.preload = 'auto';
        
        // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–≤—É–∫—É
        audio.onerror = () => {
          console.warn(`üîá –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—É–∫–æ–≤–∏–π —Ñ–∞–π–ª: ${soundUrl}`);
        };
        
        // –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
        const playPromise = audio.play();
        if (playPromise !== undefined) {
          playPromise.catch(error => {
            console.warn('üîá –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É:', error);
          });
        }
      } catch (soundError) {
        console.warn('üîá –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ –µ–ª–µ–º–µ–Ω—Ç–∞:', soundError);
      }
    }

    // üì± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
    const notificationOptions: NotificationOptions = {
      body: options.body || '',
      icon: options.icon || '/favicon.ico',
      badge: options.badge || '/favicon.ico',
      tag: options.tag || `notification-${Date.now()}`,
      requireInteraction: options.requireInteraction || false,
      silent: options.silent || false,
      vibrate: options.vibrate || [200, 100, 200],
      dir: options.dir || 'auto',
      lang: options.lang || 'uk',
      renotify: options.renotify || false,
      timestamp: options.timestamp || Date.now(),
      data: options.data || {},
      ...options
    };

    const notification = new Notification(title, notificationOptions);

    // üéØ 5. –ü–æ–¥—ñ—è onclick –¥–ª—è —Ñ–æ–∫—É—Å—É–≤–∞–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥—Ü—ñ
    notification.onclick = (event) => {
      event.preventDefault();
      
      // –§–æ–∫—É—Å—É—î–º–æ –≤–∫–ª–∞–¥–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
      if (window.focus) {
        window.focus();
      }
      
      // –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ—Ç–æ—á–Ω–µ –≤—ñ–∫–Ω–æ (–∫—Ä–æ—Å–±—Ä–∞—É–∑–µ—Ä–Ω—ñ—Å—Ç—å)
      if (window.parent && window.parent.focus) {
        window.parent.focus();
      }
      
      // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
      notification.close();
      
      // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –æ–±—Ä–æ–±–∫–∞, —è–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ options.data
      if (options.data && options.data.onClick) {
        try {
          options.data.onClick(event);
        } catch (error) {
          console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É onClick:', error);
        }
      }
    };

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    notification.onerror = (error) => {
      console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
    };

    // üïê 4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–∞–±–æ –∫–∞—Å—Ç–æ–º–Ω–∏–π —á–∞—Å)
    const autoCloseTime = options.autoClose || 5000;
    
    setTimeout(() => {
      try {
        notification.close();
      } catch (error) {
        console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
      }
    }, autoCloseTime);

    console.log(`‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø–æ–∫–∞–∑–∞–Ω–æ: "${title}"`);
    return true;

  } catch (error) {
    // üõ°Ô∏è 6. –ö—Ä–æ—Å–±—Ä–∞—É–∑–µ—Ä–Ω—ñ—Å—Ç—å —Ç–∞ fallback
    console.warn('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', error);
    console.warn(`üì¢ Fallback: ${title} - ${options.body || ''}`);
    
    // Fallback —á–µ—Ä–µ–∑ alert (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å)
    if (options.data && options.data.critical) {
      alert(`${title}\n${options.body || ''}`);
    }
    
    return false;
  }
};

// === –õ–µ–≥–∞—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ ===
export const notifyUser = async (
  title: string,
  body: string,
  iconUrl: string = '/favicon.ico',
  soundUrl: string = '/notification.wav'
) => {
  return await showNotification(title, {
    body,
    icon: iconUrl,
    sound: true,
    soundUrl,
    autoClose: 5000
  });
};
