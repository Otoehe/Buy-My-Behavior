// src/lib/scenarioGating.ts (–Ω–æ–≤–∏–π, additive)
export type ScenarioRow = {
  id: string;
  customer_id: string;
  executor_id: string;
  status: 'pending'|'agreed'|'confirmed'|'disputed';
  execute_at?: string | null; // ISO
  confirmed_by_customer?: boolean | null;
  confirmed_by_executor?: boolean | null;
  disputed?: boolean | null;
};

export function deriveButtons(row: ScenarioRow, myUserId: string) {
  const meIsCustomer = row.customer_id === myUserId;
  const meIsExecutor = row.executor_id === myUserId;
  const bothSides = meIsCustomer || meIsExecutor;

  const now = Date.now();
  const afterTime =
    !row.execute_at ? true : now >= new Date(row.execute_at).getTime();

  const isPending  = row.status === 'pending';
  const isAgreed   = row.status === 'agreed';
  const isConfirmed= row.status === 'confirmed';
  const isDisputed = row.status === 'disputed' || !!row.disputed;

  return {
    allowEdit: isPending,                             // –æ–±–∏–¥–≤–∞ —Ä–µ–¥–∞–≥—É—é—Ç—å —É pending
    allowDelete: isPending && meIsCustomer,           // –≤–∏–¥–∞–ª—è—Ç–∏ –º–æ–∂–µ —Ç—ñ–ª—å–∫–∏ –∑–∞–º–æ–≤–Ω–∏–∫ —É pending
    showAgree: isPending && meIsCustomer,             // ü§ù —ñ–Ω—ñ—Ü—ñ—é—î –∑–∞–º–æ–≤–Ω–∏–∫ (funds)
    showConfirm: isAgreed && afterTime && bothSides,  // ‚úÖ –æ–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ –ø—ñ—Å–ª—è —á–∞—Å—É
    showDispute: isAgreed && bothSides && !isConfirmed,
    locked: isConfirmed || isDisputed,                // –ø–æ–≤–Ω—ñ—Å—Ç—é –±–ª–æ–∫—É—î–º–æ –∑–º—ñ–Ω–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
  };
}
